# Generated by Django 3.1.6 on 2021-02-08 12:40

import datetime
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Funds',
            fields=[
                ('funds_id', models.AutoField(primary_key=True, serialize=False)),
                ('target_funds', models.IntegerField(default=0)),
                ('returns', models.FloatField(default=0)),
                ('proposal', models.CharField(max_length=500)),
                ('funds_deadline', models.DateField(blank=True, default=datetime.datetime.now)),
                ('company_description', models.CharField(max_length=500)),
                ('country', models.CharField(default='Singapore', max_length=100, verbose_name='Country')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_type', models.IntegerField(choices=[(1, 'Investor'), (2, 'Company'), (3, 'Superuser')])),
                ('company', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transactions',
            fields=[
                ('transactions_id', models.AutoField(primary_key=True, serialize=False)),
                ('investment_sum', models.IntegerField()),
                ('date_invested', models.DateField()),
                ('invested_funds', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stonks.funds')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visits', models.IntegerField()),
                ('unique_visits', models.IntegerField()),
                ('likes', models.IntegerField()),
                ('funds_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stonks.funds')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funds_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stonks.funds')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Accounts',
            fields=[
                ('accounts_id', models.AutoField(primary_key=True, serialize=False)),
                ('report_date', models.DateField()),
                ('type', models.CharField(max_length=100)),
                ('revenues', models.IntegerField()),
                ('expenses', models.IntegerField()),
                ('operating_income', models.IntegerField()),
                ('other_income', models.IntegerField()),
                ('pre_tax_income', models.IntegerField()),
                ('tax_provision', models.IntegerField()),
                ('net_income', models.IntegerField()),
                ('funds_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stonks.funds')),
            ],
        ),
    ]
